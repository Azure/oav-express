/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as moment from "moment";


/**
 * @class
 * Initializes a new instance of the LiveRequest class.
 * @constructor
 * Properties of the request.
 *
 * @member {object} headers Headers of the request.
 *
 * @member {string} method Http verb of the request. Possible values include:
 * 'GET', 'PUT', 'PATCH', 'POST', 'DELETE', 'HEAD', 'OPTIONS', 'TRACE'
 *
 * @member {string} url Url of the request.
 *
 * @member {object} [body] Parsed body of the request as a JSON.
 *
 */
export interface LiveRequest {
  headers: { [propertyName: string]: string };
  method: string;
  url: string;
  body?: any;
}

/**
 * @class
 * Initializes a new instance of the LiveResponse class.
 * @constructor
 * Properties of the response.
 *
 * @member {string} statusCode The Response status code.
 *
 * @member {object} headers Headers of the response.
 *
 * @member {object} [body] Body of the response.
 *
 * @member {string} [encoding] The encoding of the response body when the body
 * is a buffer.
 *
 */
export interface LiveResponse {
  statusCode: string;
  headers: { [propertyName: string]: string };
  body?: any;
  encoding?: string;
}

/**
 * @class
 * Initializes a new instance of the RequestResponse class.
 * @constructor
 * Describes the live request and response to be validated.
 *
 * @member {object} liveRequest Schema for the live request to be validated
 *
 * @member {object} [liveRequest.headers] Headers of the request.
 *
 * @member {string} [liveRequest.method] Http verb of the request. Possible
 * values include: 'GET', 'PUT', 'PATCH', 'POST', 'DELETE', 'HEAD', 'OPTIONS',
 * 'TRACE'
 *
 * @member {string} [liveRequest.url] Url of the request.
 *
 * @member {object} [liveRequest.body] Parsed body of the request as a JSON.
 *
 * @member {object} liveResponse Schema for the live response to be validated
 *
 * @member {string} [liveResponse.statusCode] The Response status code.
 *
 * @member {object} [liveResponse.headers] Headers of the response.
 *
 * @member {object} [liveResponse.body] Body of the response.
 *
 * @member {string} [liveResponse.encoding] The encoding of the response body
 * when the body is a buffer.
 *
 */
export interface RequestResponse {
  liveRequest: LiveRequest;
  liveResponse: LiveResponse;
}

/**
 * @class
 * Initializes a new instance of the OperationInfo class.
 * @constructor
 * Describes the operation against which the live request and response
 * validation happened.
 *
 * @member {string} operationId The id of the operation against which
 * validation happened. This will help find the problematic information in the
 * spec and will be useful in preparing report.
 *
 * @member {string} apiVersion Describes the api-version of the openapi
 * specification. This will help find the openapi spec corresponding to that
 * api-version and will be useful in preparing report.
 *
 */
export interface OperationInfo {
  operationId: string;
  apiVersion: string;
}

/**
 * @class
 * Initializes a new instance of the LiveValidationError class.
 * @constructor
 * Describes the error occurred while performing validation on live
 * request/response.
 *
 * @member {string} code The unique error code describing an error.
 *
 * @member {string} message The error message providing meaningful information.
 *
 */
export interface LiveValidationError {
  code: string;
  message: string;
}

/**
 * @class
 * Initializes a new instance of the ErrorResponse class.
 * @constructor
 * Describes the error response for negative scenarios.
 *
 * @member {string} [description] Description of the model property or the
 * parameter in the swagger spec that causes validation failure.
 *
 * @member {array} [params] The parameters used when validation failed
 * (z-schema construct).
 *
 * @member {array} [path] The path to the location in the document or the model
 * where the error/warning occurred.
 *
 */
export interface ErrorResponse extends LiveValidationError {
  description?: string;
  params?: string[];
  path?: string[];
}

/**
 * @class
 * Initializes a new instance of the ErrorWrapper class.
 * @constructor
 * Wrapper object
 *
 * @member {array} [errors] An array of inner errors.
 *
 */
export interface ErrorWrapper extends ErrorResponse {
  errors?: ErrorResponse[];
}

/**
 * @class
 * Initializes a new instance of the RequestValidationResult class.
 * @constructor
 * Describes the validation result of the live request.
 *
 * @member {boolean} [successfulRequest] Describes the status of live request
 * validation.
 *
 * @member {array} [operationInfo] The corresponding operation(s) in openapi
 * spec that was used for validating the request.
 *
 * @member {array} [errors] Provides more information about live response
 * validation.
 *
 */
export interface RequestValidationResult {
  readonly successfulRequest?: boolean;
  readonly operationInfo?: OperationInfo[];
  readonly errors?: ErrorWrapper[];
}

/**
 * @class
 * Initializes a new instance of the ResponseValidationResult class.
 * @constructor
 * Describes the validation result of the live response.
 *
 * @member {boolean} [successfulResponse] Describes the status of live response
 * validation.
 *
 * @member {array} [operationInfo] The corresponding operation(s) in openapi
 * spec that was used for validating the response.
 *
 * @member {array} [errors] Provides more information about live response
 * validation.
 *
 */
export interface ResponseValidationResult {
  readonly successfulResponse?: boolean;
  readonly operationInfo?: OperationInfo[];
  readonly errors?: ErrorWrapper[];
}

/**
 * @class
 * Initializes a new instance of the ValidationResult class.
 * @constructor
 * Describes the validation result of the live request, response validation.
 *
 * @member {object} [requestValidationResult] Describes the validation result
 * of the live request.
 *
 * @member {boolean} [requestValidationResult.successfulRequest] Describes the
 * status of live request validation.
 *
 * @member {array} [requestValidationResult.operationInfo] The corresponding
 * operation(s) in openapi spec that was used for validating the request.
 *
 * @member {array} [requestValidationResult.errors] Provides more information
 * about live response validation.
 *
 * @member {object} [responseValidationResult] Describes the validation result
 * of the live response.
 *
 * @member {boolean} [responseValidationResult.successfulResponse] Describes
 * the status of live response validation.
 *
 * @member {array} [responseValidationResult.operationInfo] The corresponding
 * operation(s) in openapi spec that was used for validating the response.
 *
 * @member {array} [responseValidationResult.errors] Provides more information
 * about live response validation.
 *
 * @member {array} [errors] Provides more information about validation for
 * scenarios where no potential operation was found or multiple operations were
 * found or the input was invalid.
 *
 */
export interface ValidationResult {
  readonly requestValidationResult?: RequestValidationResult;
  readonly responseValidationResult?: ResponseValidationResult;
  readonly errors?: ErrorWrapper[];
}
